<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ADMINIB-EKS3K6K" name="Command line test" tests="6" failures="0" timestamp="2 Dec 2013 11:25:37 GMT" time="8.553" errors="0">
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.answer1991.account.entity.TestTableGenerator">
    <failure type="java.lang.IllegalStateException" message="Failed to load ApplicationContext">
      <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:122)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:312)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:130)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatorValueServiceImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.answer1991.account.dao.ValidatorValueDao com.answer1991.account.dao.service.impl.ValidatorValueServiceImpl.validatorValueDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:120)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 33 more
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.answer1991.account.dao.ValidatorValueDao com.answer1991.account.dao.service.impl.ValidatorValueServiceImpl.validatorValueDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:285)
	... 49 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:986)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:856)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:768)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:486)
	... 51 more
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.entity.TestTableGenerator">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod init" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod init" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod init" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="test" time="0.003" classname="com.answer1991.account.entity.TestTableGenerator">
    <skipped/>
  </testcase> <!-- test -->
  <testcase name="afterTx" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- afterTx -->
  <testcase name="beforeTx" time="0.0" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- beforeTx -->
  <testcase name="testInsert" time="0.001" classname="com.answer1991.account.dao.TestUserDao">
    <skipped/>
  </testcase> <!-- testInsert -->
  <testcase name="testFindUserByEmail" time="0.001" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- testFindUserByEmail -->
  <testcase name="testRegister" time="0.0" classname="com.answer1991.account.dao.service.TestUserService">
    <skipped/>
  </testcase> <!-- testRegister -->
</testsuite> <!-- Command line test -->
