<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" total="6" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="8553" started-at="2013-12-02T11:25:29Z" finished-at="2013-12-02T11:25:37Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="8553" started-at="2013-12-02T11:25:29Z" finished-at="2013-12-02T11:25:37Z">
      <class name="com.answer1991.account.dao.TestUserDao">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterTx()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="afterTx" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTx -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.dao.TestUserDao.afterTx()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="init" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="init" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.dao.TestUserDao.beforeTx()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="beforeTx()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="beforeTx" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTx -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="init" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="testInsert()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="testInsert" duration-ms="1" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsert -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.dao.TestUserDao.testInsert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.answer1991.account.dao.TestUserDao@3d2fdcd7]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.answer1991.account.dao.TestUserDao -->
      <class name="com.answer1991.account.dao.service.TestUserService">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="testFindUserByEmail()[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="testFindUserByEmail" duration-ms="1" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindUserByEmail -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.dao.service.TestUserService.testFindUserByEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="testRegister()[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="testRegister" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.dao.service.TestUserService@4002e76b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.dao.service.TestUserService.testRegister()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.answer1991.account.dao.service.TestUserService -->
      <class name="com.answer1991.account.entity.TestTableGenerator">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="11" started-at="2013-12-02T19:25:29Z" finished-at="2013-12-02T19:25:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:29Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2013-12-02T19:25:29Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:122)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:312)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:69)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:181)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatorValueServiceImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.answer1991.account.dao.ValidatorValueDao com.answer1991.account.dao.service.impl.ValidatorValueServiceImpl.validatorValueDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:120)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 33 more
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.answer1991.account.dao.ValidatorValueDao com.answer1991.account.dao.service.impl.ValidatorValueServiceImpl.validatorValueDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:285)
	... 49 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.answer1991.account.dao.ValidatorValueDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:986)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:856)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:768)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:486)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="test()[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="test" duration-ms="3" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="21" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.answer1991.account.entity.TestTableGenerator.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.answer1991.account.entity.TestTableGenerator@1262f2d1]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2013-12-02T19:25:37Z" finished-at="2013-12-02T19:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.answer1991.account.entity.TestTableGenerator -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
